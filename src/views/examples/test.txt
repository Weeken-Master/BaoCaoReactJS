
import {React, useState, useEffect} from "react";
import './style.css';
import { Posts, Comments, addPost } from "API/api";
import Header from "components/Headers/Header.js";

import ProfileUser from "API/user";

import {
	Button, Badge, Card, CardHeader, CardFooter, DropdownMenu, DropdownItem,
  	UncontrolledDropdown, DropdownToggle, Media, Pagination, PaginationItem,
  	PaginationLink, Progress, Table, Container, Row, Collapse, CardBody, Form, 
  	FormGroup, Label, Input, FormText, Modal, ModalHeader, ModalBody, ModalFooter,
  	Alert, UncontrolledTooltip
} from "reactstrap";
import { useHistory } from "react-router-dom";
import { SnackbarProvider, wrapComponent } from 'react-snackbar-alert';

import MainPosts from "components/Posts/MainPost";

const submitPosts = () =>{
	return Posts("/posts");
}
const submitComments = (id) =>{
	return Comments("/comments/" + id);
}
const submitAddPost = (data) =>{
	return addPost("/add-post",data)
}

const Tables = () => {
	const history = useHistory();
  // mở bảng post bài
  	const [isOpen, setIsOpen] = useState(false);
  	const [idPost, setIdPost] = useState(-1);

  	const toggle = () => setIsOpen(!isOpen);
  	const [postLists, setPostList] = useState([]);

	const [post, setPost] =  useState(false);

	useEffect(async()=> {
		try{
			const result = await submitPosts();
			setPostList([...result.data].reverse());

		} catch{
		}
	},[]);
	
	//hiển thị thông tin bình luận của bài post
	const [commentsLists, setCommentsList] = useState([]);
	
  	const MainPost = () => {
		return(
			<>
			<MainPosts Image={postLists[idPost].Image} time={postLists[idPost].Time} commentsLists={commentsLists} 
				Content={postLists[idPost].Content} idPost={postLists[idPost].PostID} 
					login={ProfileUser.login} userID={ProfileUser.data.userID}/>
			</>
		);
	}
	//mở bảng thông tin

	const [modal, setModal] = useState(false);
	const [backdrop, setBackdrop] = useState('static');

	const toggleDetail = async(id) =>{
		if(modal)
		  	setIdPost(-1);
		else
		  	setIdPost(id);
			  
		setModal(!modal);
	
		try {
		  	id = postLists[id].PostID;
		  	const result = await submitComments(id);
		  	setCommentsList([...result.data].reverse());
		} catch (error) {
		}
	}

	const Detail = () =>{
		return(
		  	(idPost !== -1) ? (
				<Modal isOpen={modal} toggle={toggleDetail} backdrop={backdrop} modalTransition={{ timeout: 200 }} backdropTransition={{ timeout: 750 }}>
					<ModalHeader toggle={toggleDetail}>      
			  			<Alert color="success">
							<Button id="header-detail">Hỏi Đáp</Button>
							{/* tiêu đề bài post */}
				 			{ postLists[idPost].Header }
			 		 	</Alert>
					</ModalHeader>
					<ModalBody className="main-detail-posts">
			  			<MainPost/>
					</ModalBody>
					<ModalFooter>
			  			<Button color="danger" onClick={toggleDetail}>Đóng</Button>
					</ModalFooter>
		  		</Modal>) : (<></>)
			);
		}

	    const [info, setInfo] = useState({ userID:0, Header:"", Content:"", Theme:1, Image:""})

		const onValueTheme = (e) =>{
			if(e.target.value == "Hỏi Đáp")
				setInfo((prev) => ({...prev, Theme: 1}))
			else if(e.target.value == "Chia Sẽ")
			setInfo((prev) => ({...prev, Theme: 2}))
		}
		const onValueHeader = (e) =>{
			setInfo((prev) => ({...prev, Header: e.target.value}))
		}
		const onvalueContent = (e) =>{
			setInfo((prev) => ({...prev, Content: e.target.value}))
		}
		const onValueImage =(e) =>{
			setInfo((prev) => ({...prev, Image:e.target.files[0]}))
		}
		
		const Success = wrapComponent(function({ createSnackbar }) {
			function showSnackbar(message, theme) {
				createSnackbar({
					message: message,
					dismissable: false,
					pauseOnHover: false,
					progressBar: true,
					sticky: false,
					theme: theme,
					timeout: 4000
				});
			}
						
			const SubmitPostAPI = async() =>{
				const data = new FormData();
				// setInfo({...info, userID:15})
				data.append("UserID", ProfileUser.data.userID);
				data.append("Header", info.Header);
				data.append("Content", info.Content);
				data.append("Theme", info.Theme);
				data.append("file", info.Image);

				try{
					const result = await submitAddPost(data);
					setPostList([...result.data].reverse());

					showSnackbar("Đăng Bài Thành Công", "success");
				} catch{
					showSnackbar("Thất Bại", "error");
				}
			}

			return (
				<>
				  <Button color="success" onClick={SubmitPostAPI}>Đăng</Button>
				</>
			);
		});
	

	return (
		<>
		<Header />
	  		<Container className="mt--7" fluid>
				<Detail/>
				<Row>
		  			<div className="col">
						<Card className="shadow">
			  				<CardHeader className="border-0">
			  					<Row className="align-items-center">
				  					<div className="col">
										<h3 className="mb-0">Hỏi Đáp</h3>
				  					</div>
									  {ProfileUser.login ? (
										<div className="col text-right">
										<Button color="primary" onClick={toggle} size="sm">
					  						Tạo Bài Viết
										</Button>
				  					</div>):(<></>)}
				  					<Collapse isOpen={isOpen} className="add_post">
										<Card>
					  						<CardBody>
					  							<Form role="form">
													<FormGroup>
														<Label for="exampleEmail">Tên bài viết</Label>
														<Input type="text" name="name" id="exampleName" placeholder="Nhập caption" onChange={onValueHeader}/>
													</FormGroup>
													<FormGroup>
														<Label for="exampleText">Nội dung</Label>
														<Input type="textarea" name="text" id="exampleText" name="content" placeholder="Nhập nội dung" onChange={onvalueContent}/>
													</FormGroup>
													<FormGroup>
														<Label for="exampleSelect">Chủ Đề</Label>
														<Input type="select" name="theme" id="exampleSelect"  onChange={onValueTheme}>
															<option>Hỏi Đáp</option>
															<option>Chia Sẽ</option>
														</Input>
													</FormGroup>
													<FormGroup>
														<Label for="exampleFile">Hình Ảnh</Label>
														<Input type="file" name="file" id="exampleFile" onChange={onValueImage}/>
														<FormText color="muted">
															Thêm hình minh họa vào bài viết
														</FormText>
													</FormGroup>
													<FormGroup>

														 <SnackbarProvider position="bottom-left">
															{/* nút đăng kí */}
															<Success/>
														</SnackbarProvider>

													</FormGroup>
												</Form>
					  						</CardBody>
										</Card>
				  					</Collapse>
								</Row>
			  				</CardHeader>
			  				<Table className="align-items-center table-flush" responsive>
								<thead className="thead-light">
				  					<tr>
				  						<th scope="col">Tên Bài Viết</th>
										<th scope="col">Người Đăng</th>
										<th scope="col">Ngày Đăng</th>
										<th scope="col">
											<i className="ni ni-chat-round" />
										</th>
				  					</tr>
								</thead>
								<tbody>
								{postLists.map((postList, index) => (
				  					<tr key={postList.id}>
										<th className="th-name-post" onClick={() => toggleDetail(index)}>
											<span className="mb-0 text-sm">
												{postList.Header}
											</span>
										</th>
										<td>
					  						<div className="avatar-group">
												<a className="avatar avatar-sm" href="#pablo" id= {"tooltip" + index} onClick={(e) => e.preventDefault()}>
						  							<img alt="..." className="rounded-circle" src="https://bizweb.dktcdn.net/100/336/001/products/admin-10a1e959-c8a2-4964-87f1-a694c39e47ca.jpg?v=1555387211130"/>
												</a>
												<UncontrolledTooltip delay={0} target={"tooltip" + index}>
						 							{postList.UserName}
												</UncontrolledTooltip>
					  						</div>
										</td>
										<td>
											<Badge color="" className="badge-dot mr-4">
												{/* <i className="bg-warning" /> */}
												<i className="bg-success" />
												{/* <i className="bg-danger" /> */}
												{postList.Time}
											</Badge>
										</td>
										<td>{postList.Count}</td>
				  					</tr>
								))}
								</tbody>
			  				</Table>
			  				<CardFooter className="py-4">
								<nav aria-label="...">
									<Pagination className="pagination justify-content-end mb-0" listClassName="justify-content-end mb-0">
										<PaginationItem className="disabled">
											<PaginationLink href="#pablo" onClick={(e) => e.preventDefault()} tabIndex="-1">
												<i className="fas fa-angle-left" />
												<span className="sr-only">Previous</span>
											</PaginationLink>
										</PaginationItem>
										<PaginationItem className="active">
											<PaginationLink href="#pablo">
											1
											</PaginationLink>
										</PaginationItem>
										<PaginationItem className="active">
											<PaginationLink href="#pablo">
											2
											</PaginationLink>
										</PaginationItem>
										<PaginationItem className="active">
											<PaginationLink href="#pablo">
											3
											</PaginationLink>
										</PaginationItem>
										<PaginationItem>
											<PaginationLink href="#pablo" onClick={(e) => e.preventDefault()}>
												<i className="fas fa-angle-right" />
												<span className="sr-only">Next</span>
											</PaginationLink>
										</PaginationItem>
									</Pagination>
								</nav>
			  				</CardFooter>
						</Card>
		  			</div>
				</Row>

		{/* Dark table */}
		<Row className="mt-5">
		  <div className="col">
			<Card className="bg-default shadow">
			  <CardHeader className="bg-transparent border-0">
				<h3 className="text-white mb-0">Card tables</h3>
			  </CardHeader>
			  <Table
				className="align-items-center table-dark table-flush"
				responsive
			  >
				<thead className="thead-dark">
				  <tr>
					<th scope="col">Project</th>
					<th scope="col">Budget</th>
					<th scope="col">Status</th>
					<th scope="col">Users</th>
					<th scope="col">Completion</th>
					<th scope="col" />
				  </tr>
				</thead>
				<tbody>
				  <tr>
					<th scope="row">
					  <Media className="align-items-center">
						<a
						  className="avatar rounded-circle mr-3"
						  href="#pablo"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							src={
							  require("../../assets/img/theme/bootstrap.jpg")
								.default
							}
						  />
						</a>
						<Media>
						  <span className="mb-0 text-sm">
							Argon Design System
						  </span>
						</Media>
					  </Media>
					</th>
					<td>$2,500 USD</td>
					<td>
					  <Badge color="" className="badge-dot mr-4">
						<i className="bg-warning" />
						pending
					  </Badge>
					</td>
					<td>
					  <div className="avatar-group">
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip731399078"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-1-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip731399078"
						>
						  Ryan Tompson
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip491083084"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-2-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip491083084"
						>
						  Romina Hadid
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip528540780"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-3-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip528540780"
						>
						  Alexander Smith
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip237898869"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-4-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip237898869"
						>
						  Jessica Doe
						</UncontrolledTooltip>
					  </div>
					</td>
					<td>
					  <div className="d-flex align-items-center">
						<span className="mr-2">60%</span>
						<div>
						  <Progress
							max="100"
							value="60"
							barClassName="bg-warning"
						  />
						</div>
					  </div>
					</td>
					<td className="text-right">
					  <UncontrolledDropdown>
						<DropdownToggle
						  className="btn-icon-only text-light"
						  href="#pablo"
						  role="button"
						  size="sm"
						  color=""
						  onClick={(e) => e.preventDefault()}
						>
						  <i className="fas fa-ellipsis-v" />
						</DropdownToggle>
						<DropdownMenu className="dropdown-menu-arrow" right>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Another action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Something else here
						  </DropdownItem>
						</DropdownMenu>
					  </UncontrolledDropdown>
					</td>
				  </tr>
				  <tr>
					<th scope="row">
					  <Media className="align-items-center">
						<a
						  className="avatar rounded-circle mr-3"
						  href="#pablo"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							src={
							  require("../../assets/img/theme/angular.jpg")
								.default
							}
						  />
						</a>
						<Media>
						  <span className="mb-0 text-sm">
							Angular Now UI Kit PRO
						  </span>
						</Media>
					  </Media>
					</th>
					<td>$1,800 USD</td>
					<td>
					  <Badge color="" className="badge-dot">
						<i className="bg-success" />
						completed
					  </Badge>
					</td>
					<td>
					  <div className="avatar-group">
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip188614932"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-1-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip188614932"
						>
						  Ryan Tompson
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip66535734"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-2-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip delay={0} target="tooltip66535734">
						  Romina Hadid
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip427561578"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-3-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip427561578"
						>
						  Alexander Smith
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip904098289"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-4-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip904098289"
						>
						  Jessica Doe
						</UncontrolledTooltip>
					  </div>
					</td>
					<td>
					  <div className="d-flex align-items-center">
						<span className="mr-2">100%</span>
						<div>
						  <Progress
							max="100"
							value="100"
							barClassName="bg-success"
						  />
						</div>
					  </div>
					</td>
					<td className="text-right">
					  <UncontrolledDropdown>
						<DropdownToggle
						  className="btn-icon-only text-light"
						  href="#pablo"
						  role="button"
						  size="sm"
						  color=""
						  onClick={(e) => e.preventDefault()}
						>
						  <i className="fas fa-ellipsis-v" />
						</DropdownToggle>
						<DropdownMenu className="dropdown-menu-arrow" right>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Another action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Something else here
						  </DropdownItem>
						</DropdownMenu>
					  </UncontrolledDropdown>
					</td>
				  </tr>
				  <tr>
					<th scope="row">
					  <Media className="align-items-center">
						<a
						  className="avatar rounded-circle mr-3"
						  href="#pablo"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							src={
							  require("../../assets/img/theme/sketch.jpg")
								.default
							}
						  />
						</a>
						<Media>
						  <span className="mb-0 text-sm">Black Dashboard</span>
						</Media>
					  </Media>
					</th>
					<td>$3,150 USD</td>
					<td>
					  <Badge color="" className="badge-dot mr-4">
						<i className="bg-danger" />
						delayed
					  </Badge>
					</td>
					<td>
					  <div className="avatar-group">
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip707904950"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-1-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip707904950"
						>
						  Ryan Tompson
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip353988222"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-2-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip353988222"
						>
						  Romina Hadid
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip467171202"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-3-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip467171202"
						>
						  Alexander Smith
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip362118155"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-4-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip362118155"
						>
						  Jessica Doe
						</UncontrolledTooltip>
					  </div>
					</td>
					<td>
					  <div className="d-flex align-items-center">
						<span className="mr-2">72%</span>
						<div>
						  <Progress
							max="100"
							value="72"
							barClassName="bg-danger"
						  />
						</div>
					  </div>
					</td>
					<td className="text-right">
					  <UncontrolledDropdown>
						<DropdownToggle
						  className="btn-icon-only text-light"
						  href="#pablo"
						  role="button"
						  size="sm"
						  color=""
						  onClick={(e) => e.preventDefault()}
						>
						  <i className="fas fa-ellipsis-v" />
						</DropdownToggle>
						<DropdownMenu className="dropdown-menu-arrow" right>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Another action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Something else here
						  </DropdownItem>
						</DropdownMenu>
					  </UncontrolledDropdown>
					</td>
				  </tr>
				  <tr>
					<th scope="row">
					  <Media className="align-items-center">
						<a
						  className="avatar rounded-circle mr-3"
						  href="#pablo"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							src={
							  require("../../assets/img/theme/react.jpg")
								.default
							}
						  />
						</a>
						<Media>
						  <span className="mb-0 text-sm">
							React Material Dashboard
						  </span>
						</Media>
					  </Media>
					</th>
					<td>$4,400 USD</td>
					<td>
					  <Badge color="" className="badge-dot">
						<i className="bg-info" />
						on schedule
					  </Badge>
					</td>
					<td>
					  <div className="avatar-group">
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip226319315"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-1-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip226319315"
						>
						  Ryan Tompson
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip711961370"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-2-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip711961370"
						>
						  Romina Hadid
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip216246707"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-3-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip216246707"
						>
						  Alexander Smith
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip638048561"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-4-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip638048561"
						>
						  Jessica Doe
						</UncontrolledTooltip>
					  </div>
					</td>
					<td>
					  <div className="d-flex align-items-center">
						<span className="mr-2">90%</span>
						<div>
						  <Progress
							max="100"
							value="90"
							barClassName="bg-info"
						  />
						</div>
					  </div>
					</td>
					<td className="text-right">
					  <UncontrolledDropdown>
						<DropdownToggle
						  className="btn-icon-only text-light"
						  href="#pablo"
						  role="button"
						  size="sm"
						  color=""
						  onClick={(e) => e.preventDefault()}
						>
						  <i className="fas fa-ellipsis-v" />
						</DropdownToggle>
						<DropdownMenu className="dropdown-menu-arrow" right>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Another action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Something else here
						  </DropdownItem>
						</DropdownMenu>
					  </UncontrolledDropdown>
					</td>
				  </tr>
				  <tr>
					<th scope="row">
					  <Media className="align-items-center">
						<a
						  className="avatar rounded-circle mr-3"
						  href="#pablo"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							src={
							  require("../../assets/img/theme/vue.jpg").default
							}
						  />
						</a>
						<Media>
						  <span className="mb-0 text-sm">
							Vue Paper UI Kit PRO
						  </span>
						</Media>
					  </Media>
					</th>
					<td>$2,200 USD</td>
					<td>
					  <Badge color="" className="badge-dot mr-4">
						<i className="bg-success" />
						completed
					  </Badge>
					</td>
					<td>
					  <div className="avatar-group">
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip781594051"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-1-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip781594051"
						>
						  Ryan Tompson
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip840372212"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-2-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip840372212"
						>
						  Romina Hadid
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip497647175"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-3-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip497647175"
						>
						  Alexander Smith
						</UncontrolledTooltip>
						<a
						  className="avatar avatar-sm"
						  href="#pablo"
						  id="tooltip951447946"
						  onClick={(e) => e.preventDefault()}
						>
						  <img
							alt="..."
							className="rounded-circle"
							src={
							  require("../../assets/img/theme/team-4-800x800.jpg")
								.default
							}
						  />
						</a>
						<UncontrolledTooltip
						  delay={0}
						  target="tooltip951447946"
						>
						  Jessica Doe
						</UncontrolledTooltip>
					  </div>
					</td>
					<td>
					  <div className="d-flex align-items-center">
						<span className="mr-2">100%</span>
						<div>
						  <Progress
							max="100"
							value="100"
							barClassName="bg-danger"
						  />
						</div>
					  </div>
					</td>
					<td className="text-right">
					  <UncontrolledDropdown>
						<DropdownToggle
						  className="btn-icon-only text-light"
						  href="#pablo"
						  role="button"
						  size="sm"
						  color=""
						  onClick={(e) => e.preventDefault()}
						>
						  <i className="fas fa-ellipsis-v" />
						</DropdownToggle>
						<DropdownMenu className="dropdown-menu-arrow" right>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Another action
						  </DropdownItem>
						  <DropdownItem
							href="#pablo"
							onClick={(e) => e.preventDefault()}
						  >
							Something else here
						  </DropdownItem>
						</DropdownMenu>
					  </UncontrolledDropdown>
					</td>
				  </tr>
				</tbody>
			  </Table>
			</Card>
		  </div>
		</Row>
	  </Container>
	</>
  );
};

export default Tables;
